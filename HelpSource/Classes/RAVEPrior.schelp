class:: RAVEPrior
summary:: SuperCollider plugin for RAVE autoencoder
related:: Classes/RAVEPrior, Classes/RAVEEncoder, Classes/RAVE
categories:: UGens>Wrappers

description::
RAVE autoencoder plugin for SuperCollider. This class includes the RAVE prior model only. It takes an optional control-rate input and produces an Array of control-rate outputs, one each latent dimension.

note::
must use server hardwareBufferSize equal to the RAVE model (typically 2048) for good performance.
::

note::
must use server sampleRate equal to the RAVE model (typically 48000) for correct pitch.
::

note::
Synth creation will glitch the audio the first time a particular RAVE file is used, as the  model is loaded on the audio thread.
::

note::
code::
// if macOS complains about unknown binaries:
("xattr -d -r com.apple.quarantine"+Platform.userExtensionDir.quote++"/RAVE/").runInTerminal
::
::

method::new

argument::filename
String, path to torchscript file containing a RAVE model.

argument::latentSize
Integer, number of latent dimensions in the model.

argument::temperature
Optional control-rate input for the sampling temperature. 0 is deterministic, 1 is full temperature, >1 is more random, <1 is less random.

examples::

code::
(
// make sure the server can actually boot with the right sampleRate!
// Server.default.options.inDevice_("BlackHole 16ch");
// Server.default.options.outDevice_("BlackHole 16ch");
// Server.default.options.inDevice_("Built-in Microph");
// Server.default.options.outDevice_("Built-in Output");

s.options.sampleRate = 48000; // the sample rate must match RAVE
s.options.blockSize = 512;//16; // a low block size within scsynth is fine,
s.options.hardwareBufferSize = 2048; // but the hardware buffer size needs to match RAVE
// (to avoid dropouts)

s.waitForBoot{
	~bus = Bus.new(index:0, numChannels:2);
}
)

(
~synth = {
	var z = RAVEPrior.new(
		"/Users/victor/rave-models/speech/speech_realtime.ts", 8, // filename, latent size
		DC.kr(0.7), // prior temperature
	);
	z.poll(2);

	Limiter.ar(
        RAVEDecoder.new(
			"/Users/victor/rave-models/speech/speech_realtime.ts",
			z))!2 // latent inputs
	        // [z, z+z.collect{PinkNoise.kr*2-1/3}])) // pseudo-stereo
    ;
}.play(outbus:~bus);

)
::